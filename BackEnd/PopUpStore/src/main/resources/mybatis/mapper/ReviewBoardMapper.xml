<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.popup.project.board.review.model.ReviewBoardMapper">

	<!-- ReviewBoard 객체와 데이터베이스 테이블 간의 매핑을 정의 -->
    <resultMap id="reviewBoardResultMap" type="com.popup.project.board.review.model.ReviewBoard">
        <id property="reviewNum" column="review_num"/>
        <result property="reviewTitle" column="review_title"/>
        <result property="reviewContent" column="review_content"/>
        <result property="reviewOfile" column="review_ofile"/>
        <result property="reviewSfile" column="review_sfile"/>
        <result property="reviewCreateDate" column="review_create_date"/>
        <result property="reviewViewcount" column="review_viewcount"/>
        <result property="reviewLikecount" column="review_likecount"/>
        <result property="userNick" column="user_nick"/>
    </resultMap>

    <!-- 게시물 등록 -->
    <insert id="insertWrite" parameterType="com.popup.project.board.review.model.ReviewBoard">
	    INSERT INTO REVIEWS_BOARD (review_num, review_title, review_content, user_nick, review_ofile)
	    VALUES (seq_review_num.NEXTVAL, #{reviewTitle}, #{reviewContent}, #{userNick}, #{reviewOfile,jdbcType=VARCHAR})
	</insert>

    <!-- 게시물 수정 -->
    <update id="updatePost" parameterType="com.popup.project.board.review.model.ReviewBoard">
        UPDATE REVIEWS_BOARD
        SET 
            review_title = #{reviewTitle},
            review_content = #{reviewContent},
            review_ofile = CASE WHEN #{reviewOfile, jdbcType=VARCHAR} IS NULL THEN review_ofile ELSE #{reviewOfile, jdbcType=VARCHAR} END,
            review_sfile = CASE WHEN #{reviewSfile, jdbcType=VARCHAR} IS NULL THEN review_sfile ELSE #{reviewSfile, jdbcType=VARCHAR} END
        WHERE review_num = #{reviewNum}
    </update>

    <!-- 게시물 삭제 -->
    <delete id="deletePost" parameterType="int">
        DELETE FROM REVIEWS_BOARD WHERE review_num = #{reviewNum}
    </delete>
    
    <!-- 게시물 조회 -->
    <select id="getPostById" resultMap="reviewBoardResultMap">
        SELECT * FROM REVIEWS_BOARD WHERE review_num = #{reviewNum}
    </select>
    
    <!-- 게시물 개수 조회 -->
    <select id="selectCount" resultType="int">
        SELECT COUNT(*) FROM REVIEWS_BOARD
    </select>

    <!-- 게시물 목록 조회 (페이징 지원) -->
    <select id="selectListPage" resultMap="reviewBoardResultMap">
        <![CDATA[
            SELECT * FROM (
                SELECT Tb.*, ROWNUM rNum FROM (
                    SELECT * FROM REVIEWS_BOARD ORDER BY review_create_date DESC
                ) Tb WHERE ROWNUM <= #{end}
            ) WHERE rNum >= #{start}
        ]]>
    </select>

    <!-- 게시물 조회수 증가 -->
    <update id="incrementVisitCount">
        UPDATE REVIEWS_BOARD SET review_viewcount = review_viewcount + 1 WHERE review_num = #{reviewNum}
    </update>

    <!-- 게시문 좋아요 수 증가 -->
    <update id="incrementLikeCount">
        UPDATE REVIEWS_BOARD SET review_likecount = review_likecount + 1 WHERE review_num = #{reviewNum}
    </update>

    <!-- 검색된 게시물 조회 -->
    <select id="searchPostsByPage" resultMap="reviewBoardResultMap">
        SELECT *
        FROM REVIEWS_BOARD
        WHERE ${searchField} LIKE '%' || #{searchWord} || '%'
        ORDER BY review_num DESC
        OFFSET #{start} - 1 ROWS FETCH NEXT #{end} ROWS ONLY
    </select>

    <!-- 검색된 게시물 수 조회 -->
    <select id="searchPostCount" resultType="int">
        SELECT COUNT(*)
        FROM REVIEWS_BOARD
        WHERE ${searchField} LIKE '%' || #{searchWord} || '%'
    </select>
    
    <!-- 게시물 수정에서 업로드된 파일 삭제 -->
    <update id="deleteFileInfo" parameterType="int">
        UPDATE REVIEWS_BOARD
        SET review_ofile = NULL, review_sfile = NULL
        WHERE review_num = #{reviewNum}
    </update>
    
</mapper>
